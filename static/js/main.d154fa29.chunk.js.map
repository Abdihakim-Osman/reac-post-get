{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","age","setAge","country","setCountry","position","setPosition","wage","setWage","employeeList","setEmployeeList","className","type","onChange","event","target","value","required","placeholder","onClick","Axios","post","then","console","log","get","response","data","map","val","key","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA4FeA,MAxFf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGSF,mBAAS,GAHlB,mBAGNG,EAHM,KAGDC,EAHC,OAIiBJ,mBAAS,IAJ1B,mBAINK,EAJM,KAIGC,EAJH,OAKmBN,mBAAS,IAL5B,mBAKNO,EALM,KAKIC,EALJ,OAMWR,mBAAS,GANpB,mBAMNS,EANM,KAMAC,EANA,OAQ2BV,mBAAS,IARpC,mBAQNW,EARM,KAQQC,EARR,KAyBb,OACE,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,OAAf,UACA,0CACA,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAC5Bd,EAAQc,EAAMC,OAAOC,QACnBC,UAAQ,IACZ,uBAAK,uBACL,yCACA,uBAAOL,KAAK,SAAQC,SAAU,SAACC,GAC7BZ,EAAOY,EAAMC,OAAOC,QAClBC,UAAQ,IACZ,uBAAK,uBACL,6CACA,uBAAOL,KAAK,OAAOC,SAAU,SAACC,GAC5BV,EAAWU,EAAMC,OAAOC,QACrBC,UAAQ,IACb,uBAAK,uBACL,8CACA,uBAAOL,KAAK,OAAOC,SAAU,SAACC,GAC5BR,EAAYQ,EAAMC,OAAOC,QACvBC,UAAQ,IACZ,uBAAK,uBACL,gDACA,uBAAOL,KAAK,SAASM,YAAY,IAAIL,SAAU,SAACC,GAC9CN,EAAQM,EAAMC,OAAOC,QACnBC,UAAQ,IACZ,uBACA,wBAAQE,QA3CM,WAClBC,IAAMC,KAAK,gCAAiC,CAC1CtB,KAAKA,EAAME,IAAIA,EAAKE,QAAQA,EAASE,SAASA,EAAUE,KAAKA,IAC5De,MAAK,WACJC,QAAQC,IAAI,eAuCZ,4BAEF,sBAAKb,UAAU,YAAf,UACA,wBAAQQ,QAtCO,WACjBC,IAAMK,IAAI,oCACRH,MAAK,SAACI,GACNhB,EAAgBgB,EAASC,UAmCzB,4BAEClB,EAAamB,KAAI,SAACC,EAAKC,GACtB,OAAO,8BACL,wBAAOC,GAAG,QAAV,UACE,kCACI,sCAEA,qCAEA,yCAEA,0CAEA,yCAGJ,kCACE,6BAAKF,EAAI9B,OACT,6BAAK8B,EAAI5B,MACT,6BAAK4B,EAAI1B,UACT,6BAAK0B,EAAIxB,WACT,oCAAOwB,EAAItB,0BCtEVyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d154fa29.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [country, setCountry] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [wage, setWage] = useState(0);\n\n  const [employeeList, setEmployeeList] = useState([]);\n\n  const addEmployee = () => {\n    Axios.post('http://localhost:3001/create/', {\n      name:name, age:age, country:country, position:position, wage:wage\n    }).then(()=>{\n        console.log('success');\n    });\n  }\n\n  const getEmployees=()=>{\n    Axios.get('http://localhost:3001/employees/', \n    ).then((response)=>{\n      setEmployeeList(response.data);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"foam\">\n        <label>Name:</label>\n        <input type=\"text\" onChange={(event)=> {\n          setName(event.target.value);\n          }}required/>\n        <br/><br/>\n        <label>Age:</label>\n        <input type=\"number\"onChange={(event)=> {\n          setAge(event.target.value);\n          }}required/>\n        <br/><br/>\n        <label>Country:</label>\n        <input type=\"text\" onChange={(event)=> {\n          setCountry(event.target.value);\n          }} required/>\n        <br/><br/>\n        <label>Position:</label>\n        <input type=\"text\" onChange={(event)=> {\n          setPosition(event.target.value);\n          }}required/>\n        <br/><br/>\n        <label>Wage(Year):</label>\n        <input type=\"number\" placeholder=\"$\" onChange={(event)=> {\n          setWage(event.target.value);\n          }}required/>\n        <br/>\n        <button onClick={addEmployee}>Add Empoyee</button>\n      </div>\n      <div className=\"employees\">\n      <button onClick={getEmployees}>Show Employees</button>\n\n      {employeeList.map((val, key) =>{\n        return <div>\n          <table id=\"table\">\n            <thead>\n                <th>Name</th>\n                \n                <th>Age</th>\n                \n                <th>Country</th>\n                \n                <th>Position</th>\n                \n                <th>Wage</th>\n                \n            </thead>\n            <tbody>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.country}</td>\n              <td>{val.position}</td>\n              <td>$ {val.wage}</td>\n            </tbody>\n        </table>\n        </div>\n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}